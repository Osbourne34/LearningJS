// 1) Класс Phone.
// a) Создайте класс Phone, который содержит переменные number, model и weight.
// б) Создайте три экземпляра этого класса. 
// в) Выведите на консоль значения их переменных. 
// г) Добавить в класс Phone методы: receiveCall, имеет один параметр – имя звонящего. Выводит на консоль сообщение “Звонит {name}”. getNumber – возвращает номер телефона. Вызвать эти методы для каждого из объектов.
// д) Добавить конструктор в класс Phone, который принимает на вход три параметра для инициализации переменных класса - number, model и weight. 
// е) Добавить конструктор, который принимает на вход два параметра для инициализации переменных класса - number, model. 
// ж) Добавить конструктор без параметров.
// з) Вызвать из конструктора с тремя параметрами конструктор с двумя. 
// и) Добавьте перегруженный метод receiveCall, который принимает два параметра - имя звонящего и номер телефона звонящего. Вызвать этот метод.
// к) Создать метод sendMessageс аргументами переменной длины. Данный метод принимает на вход номера телефонов, которым будет отправлено сообщение. Метод выводит на консоль номера этих телефонов.
// л) Изменить класс Phone в соответствии с концепцией JavaBean.

class Phone {
    constructor(number, model, wight) {
        this.number = number;
        this.model = model;
        this.width = wight;
    }
    receiveCall(name) {
        return `Звонит: ${name}`;
    }
    getNumber(num) {
        return `Номер: ${num}`;
    }
    // Что значит вызвать из конструктора с тремя параметрами конструктор с двумя?
    // Перегруженный Метод?
}

const phone1 = new Phone('1', 'Samsung', 185);
const phone2 = new Phone('2', 'Xiaomi', 195);
const phone3 = new Phone('3', 'Iphone', 165);

console.log(phone1);
console.log(phone2);
console.log(phone3);
